import React, { useState, useEffect } from 'react';
import { View, StyleSheet, GestureResponderEvent } from 'react-native';
import { Text, IconButton, Surface } from 'react-native-paper';
import { SafeAreaView } from 'react-native-safe-area-context';
import {
  setupPlayer,
  togglePlayback,
  skipToNext,
  skipToPrevious,
} from '../services/AudioService';

const LockscreenScreen = () => {
  const [isPlaying, setIsPlaying] = useState(false);
  const [startY, setStartY] = useState(0);

  useEffect(() => {
    setupPlayer();
  }, []);

  const handlePlayPause = async () => {
    await togglePlayback();
    setIsPlaying(!isPlaying);
  };

  const handleTouchStart = (event: GestureResponderEvent) => {
    setStartY(event.nativeEvent.pageY);
  };

  const handleTouchEnd = (event: GestureResponderEvent) => {
    const endY = event.nativeEvent.pageY;
    const diff = startY - endY;
    
    // If swiped up more than 100 pixels, unlock
    if (diff > 100) {
      // Navigate to main screen
      // You'll need to implement this navigation
    }
  };

  return (
    <SafeAreaView 
      style={styles.container}
      onTouchStart={handleTouchStart}
      onTouchEnd={handleTouchEnd}
    >
      <View style={styles.timeContainer}>
        <Text variant="headlineMedium" style={styles.time}>
          {new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}
        </Text>
        <Text variant="bodyLarge" style={styles.date}>
          {new Date().toLocaleDateString([], { weekday: 'long', month: 'long', day: 'numeric' })}
        </Text>
      </View>

      <View style={styles.playerContainer}>
        <Surface style={styles.playerCard}>
          <View style={styles.header}>
            <Text variant="titleLarge" style={styles.title}>
              Cozy Rainy Afternoon
            </Text>
            <Text variant="bodyMedium" style={styles.subtitle}>
              Generated by Nightingale
            </Text>
          </View>

          <View style={styles.controls}>
            <IconButton
              icon="skip-previous"
              size={32}
              onPress={skipToPrevious}
              iconColor="#fff"
            />
            <IconButton
              icon={isPlaying ? "pause" : "play"}
              size={48}
              onPress={handlePlayPause}
              style={styles.playButton}
            />
            <IconButton
              icon="skip-next"
              size={32}
              onPress={skipToNext}
              iconColor="#fff"
            />
          </View>
        </Surface>
      </View>

      <View style={styles.footer}>
        <Text variant="bodyMedium" style={styles.unlockText}>
          Swipe up to unlock
        </Text>
      </View>
    </SafeAreaView>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#1a2332',
    padding: 16,
  },
  timeContainer: {
    alignItems: 'center',
    marginTop: 48,
  },
  time: {
    color: '#fff',
    marginBottom: 8,
  },
  date: {
    color: '#ccc',
  },
  playerContainer: {
    flex: 1,
    justifyContent: 'center',
  },
  playerCard: {
    padding: 24,
    borderRadius: 16,
    backgroundColor: 'rgba(255, 255, 255, 0.08)',
    borderWidth: 1.5,
    borderColor: 'rgba(255, 255, 255, 0.13)',
  },
  header: {
    alignItems: 'center',
    marginBottom: 32,
  },
  title: {
    color: '#fff',
    marginBottom: 8,
  },
  subtitle: {
    color: '#ccc',
  },
  controls: {
    flexDirection: 'row',
    justifyContent: 'center',
    alignItems: 'center',
  },
  playButton: {
    backgroundColor: '#2d9c93',
    marginHorizontal: 24,
  },
  footer: {
    alignItems: 'center',
    marginBottom: 32,
  },
  unlockText: {
    color: '#ccc',
  },
});

export default LockscreenScreen; 